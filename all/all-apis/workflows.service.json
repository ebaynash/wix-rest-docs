{
  "name": "Workflows",
  "client_id": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage Workflows Phases and Cards",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Workflow Templates",
      "entity": null
    },
        {
      "name": "Workflows",
      "entity": "_com_wixpress_workflow_api_v1_Workflow",
      "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/com/wixpress/workflow/api/v1/messages/workflow.proto"
    },
        {
      "name": "Phases",
      "entity": "_com_wixpress_workflow_api_v1_Phase",
      "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/com/wixpress/workflow/api/v1/messages/phase.proto"
    },
        {
      "name": "Cards",
      "entity": "_com_wixpress_workflow_api_v1_Card",
      "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/com/wixpress/workflow/api/v1/messages/card.proto"
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/workflows/com/wixpress/workflow/api/v1/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/workflows/com/wixpress/workflow/api/v1/docs/use-case-1-sync-lead-funnel.md",
      "name": "Example: Sync a Lead Funnel with an External CRM"
    },
        {
      "path": "../guides/workflows/com/wixpress/workflow/api/v1/docs/planning-your-app.md",
      "name": "Planning Your App"
    }
  ],
  "operations":   [
        {
      "name": "Archive Card",
      "methodName": "ArchiveCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to archive.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ArchiveCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ArchiveCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nArchives a card, removing it from the workflow.\n\nArchived cards are still visible to site contributors in the\n[workflow](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fworkflows).\nTo see archived cards, use\n[List Cards](https://dev.wix.com/api/rest/workflows/workflows/cards/list-cards)\nand set `fetchArcived` to `true`.\n\nAfter a card is archived,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}/archive",
        "links": [],
        "examples": [        {
          "title": "Archive a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/7dcd8d3a-6670-4c2b-9084-ed921a9c5f15/archive' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ArchiveCardRequest",
        "rpcResponseName": "ArchiveCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Archive Card (Additional Binding 1)",
      "methodName": "ArchiveCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to archive.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ArchiveCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ArchiveCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nArchives a card, removing it from the workflow.\n\nArchived cards are still visible to site contributors in the\n[workflow](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fworkflows).\nTo see archived cards, use\n[List Cards](https://dev.wix.com/api/rest/workflows/workflows/cards/list-cards)\nand set `fetchArcived` to `true`.\n\nAfter a card is archived,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}/archive",
        "links": [],
        "examples": [        {
          "title": "Archive a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/7dcd8d3a-6670-4c2b-9084-ed921a9c5f15/archive' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ArchiveCardRequest",
        "rpcResponseName": "ArchiveCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Card",
      "methodName": "CreateCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "workflowId",
        "phaseId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the card in.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "phaseId",
          "type": "string",
          "doc": " ID of the phase to create the card in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "card",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "integer",
          "doc": "\nCard position, where the first card is `0`.\n\nIf a card already occupies the specified position,\nthat card and any subsequent cards are shifted to the right by 1.\n\nDefaults to the last position.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new card in the specified phase and workflow.\n\nWhen creating a card, you provide a `name` and an optional `position`.\n\nCards are displayed according to their position from top to bottom,\nstarting from `0` and incrementing by 1.\nIf you create or move a card to an existing position,\nthe card in that position and any subsequent cards\nare shifted down by 1.\n\nIf `position` is not specified,\nthe new card is given the bottom position.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases/{phaseId}/cards",
        "links": [],
        "examples": [        {
          "title": "Create a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases/010d507f-002e-4956-9065-f6077283c031/cards' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"card\": {\n    \"name\": \"In√®s Brunet\",\n    \"description\": \"New lead\",\n    \"primaryAttachment\": {\n      \"contactId\": \"73904dbd-94ca-4ac1-a593-ef0627673e59\"\n    },\n    \"source\": \"My CRM\"\n  },\n  \"position\": 1\n}'"],
          "response": ["{\"id\": \"07b7fe9b-aa62-451c-910b-424ae8940a0b\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCardRequest",
        "rpcResponseName": "CreateCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Card (Additional Binding 1)",
      "methodName": "CreateCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "workflowId",
        "phaseId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the card in.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "phaseId",
          "type": "string",
          "doc": " ID of the phase to create the card in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "card",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "integer",
          "doc": "\nCard position, where the first card is `0`.\n\nIf a card already occupies the specified position,\nthat card and any subsequent cards are shifted to the right by 1.\n\nDefaults to the last position.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new card in the specified phase and workflow.\n\nWhen creating a card, you provide a `name` and an optional `position`.\n\nCards are displayed according to their position from top to bottom,\nstarting from `0` and incrementing by 1.\nIf you create or move a card to an existing position,\nthe card in that position and any subsequent cards\nare shifted down by 1.\n\nIf `position` is not specified,\nthe new card is given the bottom position.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases/{phaseId}/cards",
        "links": [],
        "examples": [        {
          "title": "Create a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases/010d507f-002e-4956-9065-f6077283c031/cards' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"card\": {\n    \"name\": \"In√®s Brunet\",\n    \"description\": \"New lead\",\n    \"primaryAttachment\": {\n      \"contactId\": \"73904dbd-94ca-4ac1-a593-ef0627673e59\"\n    },\n    \"source\": \"My CRM\"\n  },\n  \"position\": 1\n}'"],
          "response": ["{\"id\": \"07b7fe9b-aa62-451c-910b-424ae8940a0b\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCardRequest",
        "rpcResponseName": "CreateCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Phase",
      "methodName": "CreatePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "phase.name",
        "workflowId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the phase in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "integer",
          "doc": "\nPhase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n\nDefaults to the last position,\nwhich is displayed before the win phase.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreatePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreatePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new phase in the specified workflow.\n\nWhen creating a phase, you provide a `name` and an optional `position`.\n\nPhases are displayed according to their position from left to right,\nstarting from `0` and incrementing by 1.\nIf you create or move a phase to an existing position,\nthe phase in that position and any subsequent phases\nare shifted to the right by 1.\n\nIf `position` is not specified,\nthe new phase is given the rightmost position.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases",
        "links": [],
        "examples": [        {
          "title": "Create a phase",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"phase\": {\n    \"name\": \"My new phase\"\n  },\n  \"position\": 1\n}'"],
          "response": ["{\"id\": \"010d507f-002e-4956-9065-f6077283c031\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreatePhaseRequest",
        "rpcResponseName": "CreatePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Phase (Additional Binding 1)",
      "methodName": "CreatePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "phase.name",
        "workflowId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the phase in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "position",
          "type": "integer",
          "doc": "\nPhase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n\nDefaults to the last position,\nwhich is displayed before the win phase.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreatePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreatePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new phase in the specified workflow.\n\nWhen creating a phase, you provide a `name` and an optional `position`.\n\nPhases are displayed according to their position from left to right,\nstarting from `0` and incrementing by 1.\nIf you create or move a phase to an existing position,\nthe phase in that position and any subsequent phases\nare shifted to the right by 1.\n\nIf `position` is not specified,\nthe new phase is given the rightmost position.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases",
        "links": [],
        "examples": [        {
          "title": "Create a phase",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"phase\": {\n    \"name\": \"My new phase\"\n  },\n  \"position\": 1\n}'"],
          "response": ["{\"id\": \"010d507f-002e-4956-9065-f6077283c031\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreatePhaseRequest",
        "rpcResponseName": "CreatePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Workflow",
      "methodName": "CreateWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflow.name"],
      "params": [      {
        "in": "BODY",
        "name": "workflow",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
        "doc": " Workflow details.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "CreateWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new workflow.\n\nWhen creating a workflow, you provide a `name` and optional `description`,\nand the new workflow's `id` is returned.\nBy default, the new workflow contains a `winPhase` named \"Win\".\nNo other phases or cards are created.\n\nTo continue building the workflow,\nuse the returned workflow `id` to\n[create phases](https://dev.wix.com/api/rest/workflows/workflows/phases/create-phase)\nand [add cards](https://dev.wix.com/api/rest/drafts/workflows/cards/create-card)\nto the new phases.\n\nA site can have up to 30 workflows.\nWhen this limit is reached, calls to this endpoint result in a 403 error.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/workflows",
        "links": [],
        "examples": [        {
          "title": "Create a workflow",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/workflows/v1/workflows' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"workflow\": {\n    \"name\": \"New Workflow\"\n  }\n}'"],
          "response": ["{\"id\": \"4807f096-89af-4b02-81eb-216a39ec8317\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateWorkflowRequest",
        "rpcResponseName": "CreateWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Workflow (Additional Binding 1)",
      "methodName": "CreateWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflow.name"],
      "params": [      {
        "in": "BODY",
        "name": "workflow",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
        "doc": " Workflow details.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "CreateWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new workflow.\n\nWhen creating a workflow, you provide a `name` and optional `description`,\nand the new workflow's `id` is returned.\nBy default, the new workflow contains a `winPhase` named \"Win\".\nNo other phases or cards are created.\n\nTo continue building the workflow,\nuse the returned workflow `id` to\n[create phases](https://dev.wix.com/api/rest/workflows/workflows/phases/create-phase)\nand [add cards](https://dev.wix.com/api/rest/drafts/workflows/cards/create-card)\nto the new phases.\n\nA site can have up to 30 workflows.\nWhen this limit is reached, calls to this endpoint result in a 403 error.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows",
        "links": [],
        "examples": [        {
          "title": "Create a workflow",
          "body": ["curl -X POST \\\n  'https://www.wixapis.com/workflows/v1/workflows' \\\n  -H 'Authorization: <AUTH>' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"workflow\": {\n    \"name\": \"New Workflow\"\n  }\n}'"],
          "response": ["{\"id\": \"4807f096-89af-4b02-81eb-216a39ec8317\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateWorkflowRequest",
        "rpcResponseName": "CreateWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Card",
      "methodName": "DeleteCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDeletes a card from a workflow.\n\nDeleted cards are removed from the workflow completely and can't be restored.\nTo keep the card available for site contributors, use\n[Archive Card](https://dev.wix.com/api/rest/workflows/workflows/cards/archive-card)\ninstead.\n\nAfter a card is deleted,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/cards/07b7fe9b-aa62-451c-910b-424ae8940a0b' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCardRequest",
        "rpcResponseName": "DeleteCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Card (Additional Binding 1)",
      "methodName": "DeleteCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDeletes a card from a workflow.\n\nDeleted cards are removed from the workflow completely and can't be restored.\nTo keep the card available for site contributors, use\n[Archive Card](https://dev.wix.com/api/rest/workflows/workflows/cards/archive-card)\ninstead.\n\nAfter a card is deleted,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/cards/07b7fe9b-aa62-451c-910b-424ae8940a0b' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCardRequest",
        "rpcResponseName": "DeleteCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Phase",
      "methodName": "DeletePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeletePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeletePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a phase and its cards.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Delete a phase",
          "body": ["curl -X DELETE 'https://www.wixapis.com/workflows/v1/phases/1f99a031-2aa2-4334-8787-ec5adcabb995' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeletePhaseRequest",
        "rpcResponseName": "DeletePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Phase (Additional Binding 1)",
      "methodName": "DeletePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeletePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeletePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a phase and its cards.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/api/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Delete a phase",
          "body": ["curl -X DELETE 'https://www.wixapis.com/workflows/v1/phases/1f99a031-2aa2-4334-8787-ec5adcabb995' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeletePhaseRequest",
        "rpcResponseName": "DeletePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Workflow",
      "methodName": "DeleteWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the workflow to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a workflow and its phases and cards.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Delete a workflow",
          "body": ["curl -X DELETE \\\n  'https://www.wixapis.com/workflows/v1/workflows/4807f096-89af-4b02-81eb-216a39ec8317' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteWorkflowRequest",
        "rpcResponseName": "DeleteWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Workflow (Additional Binding 1)",
      "methodName": "DeleteWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the workflow to delete.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a workflow and its phases and cards.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Delete a workflow",
          "body": ["curl -X DELETE \\\n  'https://www.wixapis.com/workflows/v1/workflows/4807f096-89af-4b02-81eb-216a39ec8317' \\\n  -H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteWorkflowRequest",
        "rpcResponseName": "DeleteWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Card",
      "methodName": "GetCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a card.\n\nIf the specified card is archived, an empty object is returned.\nYou can restore the card with\n[Restore Card](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a card",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/cards/11d56336-dd71-4ee1-b057-18ab5d7f9b0b' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"card\": {\"info\": {\n  \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n  \"name\": \"Our printer isn't working\",\n  \"primaryAttachment\":   {\n    \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n    \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n    \"attachmentType\": \"ContactType\",\n    \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n  },\n  \"source\": \"Contacts\",\n  \"createdAt\": \"2021-06-08T11:21:10Z\",\n  \"updatedAt\": \"2021-06-17T15:37:41Z\",\n  \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n  \"createdDate\": \"2021-06-08T11:21:10Z\",\n  \"updatedDate\": \"2021-06-17T15:37:41Z\"\n}}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCardRequest",
        "rpcResponseName": "GetCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Card (Additional Binding 1)",
      "methodName": "GetCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the card to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a card.\n\nIf the specified card is archived, an empty object is returned.\nYou can restore the card with\n[Restore Card](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a card",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/cards/11d56336-dd71-4ee1-b057-18ab5d7f9b0b' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"card\": {\"info\": {\n  \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n  \"name\": \"Our printer isn't working\",\n  \"primaryAttachment\":   {\n    \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n    \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n    \"attachmentType\": \"ContactType\",\n    \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n  },\n  \"source\": \"Contacts\",\n  \"createdAt\": \"2021-06-08T11:21:10Z\",\n  \"updatedAt\": \"2021-06-17T15:37:41Z\",\n  \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n  \"createdDate\": \"2021-06-08T11:21:10Z\",\n  \"updatedDate\": \"2021-06-17T15:37:41Z\"\n}}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCardRequest",
        "rpcResponseName": "GetCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Phase",
      "methodName": "GetPhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetPhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetPhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a phase and its cards.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a phase",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/phases/010d507f-002e-4956-9065-f6077283c031' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"phase\": {\n  \"info\":   {\n    \"id\": \"010d507f-002e-4956-9065-f6077283c031\",\n    \"name\": \"Just a phase\"\n  },\n  \"cardsList\":   {\n    \"total\": 2,\n    \"cards\":     [\n      {\"info\":       {\n        \"id\": \"76592ff3-985d-4e1d-bb00-b04b6a235fba\",\n        \"name\": \"\\\"About Us\\\" Article\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"bb1fcff8-8cb6-468d-826e-444cfe186e56\",\n          \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-07-14T13:31:58Z\",\n        \"updatedAt\": \"2021-07-14T13:31:58Z\",\n        \"phaseId\": \"010d507f-002e-4956-9065-f6077283c031\",\n        \"createdDate\": \"2021-07-14T13:31:58Z\",\n        \"updatedDate\": \"2021-07-14T13:31:58Z\"\n      }},\n      {\"info\":       {\n        \"id\": \"014f3e83-b450-4b30-bb14-9ddcb422d12f\",\n        \"name\": \"Logo Design\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"4128b2fd-9b45-4afb-a339-d885d35b089c\",\n          \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-07-14T13:26:24Z\",\n        \"updatedAt\": \"2021-07-14T13:26:24Z\",\n        \"phaseId\": \"010d507f-002e-4956-9065-f6077283c031\",\n        \"createdDate\": \"2021-07-14T13:26:24Z\",\n        \"updatedDate\": \"2021-07-14T13:26:24Z\"\n      }}\n    ]\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetPhaseRequest",
        "rpcResponseName": "GetPhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Phase (Additional Binding 1)",
      "methodName": "GetPhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetPhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetPhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a phase and its cards.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a phase",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/phases/010d507f-002e-4956-9065-f6077283c031' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"phase\": {\n  \"info\":   {\n    \"id\": \"010d507f-002e-4956-9065-f6077283c031\",\n    \"name\": \"Just a phase\"\n  },\n  \"cardsList\":   {\n    \"total\": 2,\n    \"cards\":     [\n      {\"info\":       {\n        \"id\": \"76592ff3-985d-4e1d-bb00-b04b6a235fba\",\n        \"name\": \"\\\"About Us\\\" Article\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"bb1fcff8-8cb6-468d-826e-444cfe186e56\",\n          \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-07-14T13:31:58Z\",\n        \"updatedAt\": \"2021-07-14T13:31:58Z\",\n        \"phaseId\": \"010d507f-002e-4956-9065-f6077283c031\",\n        \"createdDate\": \"2021-07-14T13:31:58Z\",\n        \"updatedDate\": \"2021-07-14T13:31:58Z\"\n      }},\n      {\"info\":       {\n        \"id\": \"014f3e83-b450-4b30-bb14-9ddcb422d12f\",\n        \"name\": \"Logo Design\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"4128b2fd-9b45-4afb-a339-d885d35b089c\",\n          \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-07-14T13:26:24Z\",\n        \"updatedAt\": \"2021-07-14T13:26:24Z\",\n        \"phaseId\": \"010d507f-002e-4956-9065-f6077283c031\",\n        \"createdDate\": \"2021-07-14T13:26:24Z\",\n        \"updatedDate\": \"2021-07-14T13:26:24Z\"\n      }}\n    ]\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetPhaseRequest",
        "rpcResponseName": "GetPhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Workflow",
      "methodName": "GetWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "cardsPerPhase",
          "type": "integer",
          "doc": "\nMaximum number of cards to return per phase.\nTo retrieve additional pages of cards, use\n[List Cards](https://dev.wix.com/api/rest/workflows/workflows/cards/list-cards)\n(in the Cards API).\n\nDefaults to `10`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a workflow by ID.\n\nUse this endpoint to list all phases and the first cards for each phase.\n\nThe returned workflow object contains all the active phases and the win phase.\nThe active phases are available in the `phasesList.phases` array,\nand the win phase is available at `winPhase`.\nEach phase's ID is in the phase object at `info.id`.\nThe phase ID is needed when\n[moving](https://dev.wix.com/api/rest/workflows/workflows/cards/move-card)\nor [restoring](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card)\na card.\n\nBy default, the workflow is returned with up to 10 cards per phase.\nYou can change the number of cards returned\nwith the `cardsInitialPageSize` parameter.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"workflow\": {\n  \"info\":   {\n    \"id\": \"4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c\",\n    \"name\": \"Help Desk & IT\",\n    \"description\": \"Manage your support desk from request to completion.\",\n    \"createdAt\": \"2021-06-08T11:17:49.050Z\",\n    \"isDeletable\": true,\n    \"createdDate\": \"2021-06-08T11:17:49.050Z\"\n  },\n  \"winPhase\":   {\n    \"info\":     {\n      \"id\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n      \"name\": \"Solved\"\n    },\n    \"cardsList\":     {\n      \"total\": 1,\n      \"cards\": [{\"info\":       {\n        \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n        \"name\": \"Our printer isn't working\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n          \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-06-08T11:21:10Z\",\n        \"updatedAt\": \"2021-06-17T15:37:41Z\",\n        \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n        \"createdDate\": \"2021-06-08T11:21:10Z\",\n        \"updatedDate\": \"2021-06-17T15:37:41Z\"\n      }}]\n    }\n  },\n  \"phasesList\":   {\n    \"total\": 4,\n    \"phases\":     [\n            {\n        \"info\":         {\n          \"id\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n          \"name\": \"Paused\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n            \"name\": \"Our printer isn't working again\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n              \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n              \"attachmentType\": \"ContactType\",\n              \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2021-06-30T11:01:53Z\",\n            \"updatedAt\": \"2021-06-30T11:01:53Z\",\n            \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n            \"createdDate\": \"2021-06-30T11:01:53Z\",\n            \"updatedDate\": \"2021-06-30T11:01:53Z\"\n          }}]\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n          \"name\": \"Triage\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n            \"name\": \"Equipment: Need a keyboard\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n              \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n              \"attachmentType\": \"ContactType\",\n              \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2021-06-08T11:19:09Z\",\n            \"updatedAt\": \"2021-07-14T13:08:09Z\",\n            \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n            \"createdDate\": \"2021-06-08T11:19:09Z\",\n            \"updatedDate\": \"2021-07-14T13:08:09Z\"\n          }}]\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"6b596fdb-2e2f-40fa-b667-37bca9490e72\",\n          \"name\": \"Solving\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"5a5ec67a-41bd-4f24-950b-44761e5012c2\",\n          \"name\": \"Escalate\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      }\n    ]\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetWorkflowRequest",
        "rpcResponseName": "GetWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Workflow (Additional Binding 1)",
      "methodName": "GetWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to retrieve.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "cardsPerPhase",
          "type": "integer",
          "doc": "\nMaximum number of cards to return per phase.\nTo retrieve additional pages of cards, use\n[List Cards](https://dev.wix.com/api/rest/workflows/workflows/cards/list-cards)\n(in the Cards API).\n\nDefaults to `10`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_GetWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a workflow by ID.\n\nUse this endpoint to list all phases and the first cards for each phase.\n\nThe returned workflow object contains all the active phases and the win phase.\nThe active phases are available in the `phasesList.phases` array,\nand the win phase is available at `winPhase`.\nEach phase's ID is in the phase object at `info.id`.\nThe phase ID is needed when\n[moving](https://dev.wix.com/api/rest/workflows/workflows/cards/move-card)\nor [restoring](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card)\na card.\n\nBy default, the workflow is returned with up to 10 cards per phase.\nYou can change the number of cards returned\nwith the `cardsInitialPageSize` parameter.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Get a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\"workflow\": {\n  \"info\":   {\n    \"id\": \"4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c\",\n    \"name\": \"Help Desk & IT\",\n    \"description\": \"Manage your support desk from request to completion.\",\n    \"createdAt\": \"2021-06-08T11:17:49.050Z\",\n    \"isDeletable\": true,\n    \"createdDate\": \"2021-06-08T11:17:49.050Z\"\n  },\n  \"winPhase\":   {\n    \"info\":     {\n      \"id\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n      \"name\": \"Solved\"\n    },\n    \"cardsList\":     {\n      \"total\": 1,\n      \"cards\": [{\"info\":       {\n        \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n        \"name\": \"Our printer isn't working\",\n        \"primaryAttachment\":         {\n          \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n          \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n          \"attachmentType\": \"ContactType\",\n          \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n        },\n        \"source\": \"Contacts\",\n        \"createdAt\": \"2021-06-08T11:21:10Z\",\n        \"updatedAt\": \"2021-06-17T15:37:41Z\",\n        \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n        \"createdDate\": \"2021-06-08T11:21:10Z\",\n        \"updatedDate\": \"2021-06-17T15:37:41Z\"\n      }}]\n    }\n  },\n  \"phasesList\":   {\n    \"total\": 4,\n    \"phases\":     [\n            {\n        \"info\":         {\n          \"id\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n          \"name\": \"Paused\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n            \"name\": \"Our printer isn't working again\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n              \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n              \"attachmentType\": \"ContactType\",\n              \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2021-06-30T11:01:53Z\",\n            \"updatedAt\": \"2021-06-30T11:01:53Z\",\n            \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n            \"createdDate\": \"2021-06-30T11:01:53Z\",\n            \"updatedDate\": \"2021-06-30T11:01:53Z\"\n          }}]\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n          \"name\": \"Triage\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n            \"name\": \"Equipment: Need a keyboard\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n              \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n              \"attachmentType\": \"ContactType\",\n              \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2021-06-08T11:19:09Z\",\n            \"updatedAt\": \"2021-07-14T13:08:09Z\",\n            \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n            \"createdDate\": \"2021-06-08T11:19:09Z\",\n            \"updatedDate\": \"2021-07-14T13:08:09Z\"\n          }}]\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"6b596fdb-2e2f-40fa-b667-37bca9490e72\",\n          \"name\": \"Solving\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"5a5ec67a-41bd-4f24-950b-44761e5012c2\",\n          \"name\": \"Escalate\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      }\n    ]\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetWorkflowRequest",
        "rpcResponseName": "GetWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Active Phases",
      "methodName": "ListPhases",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflowId"],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose phases will be listed.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListPhases",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListPhasesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of active phases in the specified workflow.\n\nBy default, the returned phases are sorted by their display order.\n\nThe win phase is not an active phase\nand is therefore not returned with this endpoint.\nTo get the win phase ID, use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow?branch=workflows).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases",
        "links": [],
        "examples": [        {
          "title": "List phases in a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c/phases' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"phases\":   [\n        {\n      \"info\":       {\n        \"id\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n        \"name\": \"Paused\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n          \"name\": \"Our printer isn't working again\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n            \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n            \"attachmentType\": \"ContactType\",\n            \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2021-06-30T11:01:53Z\",\n          \"updatedAt\": \"2021-06-30T11:01:53Z\",\n          \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n          \"createdDate\": \"2021-06-30T11:01:53Z\",\n          \"updatedDate\": \"2021-06-30T11:01:53Z\"\n        }}]\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n        \"name\": \"Triage\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n          \"name\": \"Equipment: Need a keyboard\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n            \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n            \"attachmentType\": \"ContactType\",\n            \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2021-06-08T11:19:09Z\",\n          \"updatedAt\": \"2021-07-14T13:08:09Z\",\n          \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n          \"createdDate\": \"2021-06-08T11:19:09Z\",\n          \"updatedDate\": \"2021-07-14T13:08:09Z\"\n        }}]\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"6b596fdb-2e2f-40fa-b667-37bca9490e72\",\n        \"name\": \"Solving\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"5a5ec67a-41bd-4f24-950b-44761e5012c2\",\n        \"name\": \"Escalate\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 4,\n    \"count\": 4\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListPhasesRequest",
        "rpcResponseName": "ListPhasesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Active Phases (Additional Binding 1)",
      "methodName": "ListPhases",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflowId"],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose phases will be listed.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListPhases",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListPhasesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of active phases in the specified workflow.\n\nBy default, the returned phases are sorted by their display order.\n\nThe win phase is not an active phase\nand is therefore not returned with this endpoint.\nTo get the win phase ID, use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow?branch=workflows).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases",
        "links": [],
        "examples": [        {
          "title": "List phases in a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c/phases' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"phases\":   [\n        {\n      \"info\":       {\n        \"id\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n        \"name\": \"Paused\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n          \"name\": \"Our printer isn't working again\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n            \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n            \"attachmentType\": \"ContactType\",\n            \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2021-06-30T11:01:53Z\",\n          \"updatedAt\": \"2021-06-30T11:01:53Z\",\n          \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n          \"createdDate\": \"2021-06-30T11:01:53Z\",\n          \"updatedDate\": \"2021-06-30T11:01:53Z\"\n        }}]\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n        \"name\": \"Triage\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n          \"name\": \"Equipment: Need a keyboard\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n            \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n            \"attachmentType\": \"ContactType\",\n            \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2021-06-08T11:19:09Z\",\n          \"updatedAt\": \"2021-07-14T13:08:09Z\",\n          \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n          \"createdDate\": \"2021-06-08T11:19:09Z\",\n          \"updatedDate\": \"2021-07-14T13:08:09Z\"\n        }}]\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"6b596fdb-2e2f-40fa-b667-37bca9490e72\",\n        \"name\": \"Solving\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"5a5ec67a-41bd-4f24-950b-44761e5012c2\",\n        \"name\": \"Escalate\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 4,\n    \"count\": 4\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListPhasesRequest",
        "rpcResponseName": "ListPhasesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Cards",
      "methodName": "ListCards",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflowId"],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose cards will be listed.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fetchArchived",
          "type": "boolean",
          "doc": "\nFilters for archived cards.\nIf set to `true`,\nonly archived cards are returned.\nIf set to `false`,\nonly cards that are not archived are returned.\n\nDefaults to `false`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "attachmentValue",
          "type": "string",
          "doc": " Filters for cards with the specified contact ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "phaseId",
          "type": "string",
          "doc": " Filters for cards in the specified phase.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n\n Defaults to `50`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `createdDate`, `updatedDate`, `phaseId`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListCards",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListCardsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of cards in the specified workflow.\n\nBy default, the returned cards are sorted by their display order.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{workflowId}/cards",
        "links": [],
        "examples": [        {
          "title": "List all cards in a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/f4d11ab3-37ec-466b-affe-192689e5f40a/cards' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"cards\":   [\n    {\"info\":     {\n      \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n      \"name\": \"Our printer isn't working again\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n        \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-30T11:01:53Z\",\n      \"updatedAt\": \"2021-06-30T11:01:53Z\",\n      \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n      \"createdDate\": \"2021-06-30T11:01:53Z\",\n      \"updatedDate\": \"2021-06-30T11:01:53Z\"\n    }},\n    {\"info\":     {\n      \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n      \"name\": \"Our printer isn't working\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n        \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-08T11:21:10Z\",\n      \"updatedAt\": \"2021-06-17T15:37:41Z\",\n      \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n      \"createdDate\": \"2021-06-08T11:21:10Z\",\n      \"updatedDate\": \"2021-06-17T15:37:41Z\"\n    }},\n    {\"info\":     {\n      \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n      \"name\": \"Equipment: Need a keyboard\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n        \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-08T11:19:09Z\",\n      \"updatedAt\": \"2021-07-14T13:08:09Z\",\n      \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n      \"createdDate\": \"2021-06-08T11:19:09Z\",\n      \"updatedDate\": \"2021-07-14T13:08:09Z\"\n    }}\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 3,\n    \"count\": 3\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListCardsRequest",
        "rpcResponseName": "ListCardsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Cards (Additional Binding 1)",
      "methodName": "ListCards",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["workflowId"],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose cards will be listed.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fetchArchived",
          "type": "boolean",
          "doc": "\nFilters for archived cards.\nIf set to `true`,\nonly archived cards are returned.\nIf set to `false`,\nonly cards that are not archived are returned.\n\nDefaults to `false`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "attachmentValue",
          "type": "string",
          "doc": " Filters for cards with the specified contact ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "phaseId",
          "type": "string",
          "doc": " Filters for cards in the specified phase.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n\n Defaults to `50`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `createdDate`, `updatedDate`, `phaseId`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListCards",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListCardsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of cards in the specified workflow.\n\nBy default, the returned cards are sorted by their display order.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/cards",
        "links": [],
        "examples": [        {
          "title": "List all cards in a workflow",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows/f4d11ab3-37ec-466b-affe-192689e5f40a/cards' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"cards\":   [\n    {\"info\":     {\n      \"id\": \"09b8d6c2-c417-47d1-907b-016910e763b6\",\n      \"name\": \"Our printer isn't working again\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"270e74bc-9639-4565-b82e-867c58a90faa\",\n        \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-30T11:01:53Z\",\n      \"updatedAt\": \"2021-06-30T11:01:53Z\",\n      \"phaseId\": \"9ed196ab-a2f7-470a-84dc-2f7ab2525080\",\n      \"createdDate\": \"2021-06-30T11:01:53Z\",\n      \"updatedDate\": \"2021-06-30T11:01:53Z\"\n    }},\n    {\"info\":     {\n      \"id\": \"11d56336-dd71-4ee1-b057-18ab5d7f9b0b\",\n      \"name\": \"Our printer isn't working\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"869dd4ff-8b70-457e-ac78-916061539523\",\n        \"value\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"bc0ae72b-3285-485b-b0ad-c32c769a4daf\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-08T11:21:10Z\",\n      \"updatedAt\": \"2021-06-17T15:37:41Z\",\n      \"phaseId\": \"86422fa6-6f3a-4932-8ad0-c5533faf35bd\",\n      \"createdDate\": \"2021-06-08T11:21:10Z\",\n      \"updatedDate\": \"2021-06-17T15:37:41Z\"\n    }},\n    {\"info\":     {\n      \"id\": \"afb74888-7fe9-46a9-995c-1ef917b17ed6\",\n      \"name\": \"Equipment: Need a keyboard\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"ca4b0bba-a52b-44fc-bc53-d4a3902efe66\",\n        \"value\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\",\n        \"attachmentType\": \"ContactType\",\n        \"contactId\": \"a52852d7-e0d6-484b-93fe-bffdb670f08f\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2021-06-08T11:19:09Z\",\n      \"updatedAt\": \"2021-07-14T13:08:09Z\",\n      \"phaseId\": \"0f8616a2-85c5-4abc-b6ac-6a389ce4d020\",\n      \"createdDate\": \"2021-06-08T11:19:09Z\",\n      \"updatedDate\": \"2021-07-14T13:08:09Z\"\n    }}\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 3,\n    \"count\": 3\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListCardsRequest",
        "rpcResponseName": "ListCardsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Workflows",
      "methodName": "ListWorkflows",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of workflows to return.\n If omitted, all results are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `description`, `createdDate`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListWorkflows",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListWorkflowsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of the site's workflows.\n\nBy default,\nthe returned workflows are sorted by `name` in ascending order.\nSorting is applied lexicographically,\nso `\"abc\"` comes after `\"XYZ\"`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/v1/workflows",
        "links": [],
        "examples": [        {
          "title": "List 3 workflows",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows?limit=3' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"workflows\":   [\n        {\n      \"id\": \"efc31739-107e-4efa-98cb-89e040324efd\",\n      \"name\": \"Custom Flow\",\n      \"description\": \"\",\n      \"createdAt\": \"2021-02-10T14:35:41.759Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-02-10T14:35:41.759Z\"\n    },\n        {\n      \"id\": \"4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c\",\n      \"name\": \"Help Desk & IT\",\n      \"description\": \"Manage your support desk from request to completion.\",\n      \"createdAt\": \"2021-06-08T11:17:49.050Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-06-08T11:17:49.050Z\"\n    },\n        {\n      \"id\": \"f4d11ab3-37ec-466b-affe-192689e5f40a\",\n      \"name\": \"Lead Funnel\",\n      \"description\": \"Show where contacts are in the lead capturing process.\",\n      \"createdAt\": \"2021-07-12T18:01:45.074Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-07-12T18:01:45.074Z\"\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 3,\n    \"total\": 30,\n    \"count\": 3\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListWorkflowsRequest",
        "rpcResponseName": "ListWorkflowsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Workflows (Additional Binding 1)",
      "methodName": "ListWorkflows",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of workflows to return.\n If omitted, all results are returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `description`, `createdDate`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListWorkflows",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_ListWorkflowsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRetrieves a list of the site's workflows.\n\nBy default,\nthe returned workflows are sorted by `name` in ascending order.\nSorting is applied lexicographically,\nso `\"abc\"` comes after `\"XYZ\"`.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows",
        "links": [],
        "examples": [        {
          "title": "List 3 workflows",
          "body": ["curl -X GET 'https://www.wixapis.com/workflows/v1/workflows?limit=3' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json'"],
          "response": ["{\n  \"workflows\":   [\n        {\n      \"id\": \"efc31739-107e-4efa-98cb-89e040324efd\",\n      \"name\": \"Custom Flow\",\n      \"description\": \"\",\n      \"createdAt\": \"2021-02-10T14:35:41.759Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-02-10T14:35:41.759Z\"\n    },\n        {\n      \"id\": \"4efdb2c2-fe2d-4062-8fa5-c2fb346f3d1c\",\n      \"name\": \"Help Desk & IT\",\n      \"description\": \"Manage your support desk from request to completion.\",\n      \"createdAt\": \"2021-06-08T11:17:49.050Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-06-08T11:17:49.050Z\"\n    },\n        {\n      \"id\": \"f4d11ab3-37ec-466b-affe-192689e5f40a\",\n      \"name\": \"Lead Funnel\",\n      \"description\": \"Show where contacts are in the lead capturing process.\",\n      \"createdAt\": \"2021-07-12T18:01:45.074Z\",\n      \"isDeletable\": true,\n      \"createdDate\": \"2021-07-12T18:01:45.074Z\"\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 3,\n    \"total\": 30,\n    \"count\": 3\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListWorkflowsRequest",
        "rpcResponseName": "ListWorkflowsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Card",
      "methodName": "MoveCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to move.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to move the card to.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the card in the phase, where the first card is `0`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "MoveCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_MoveCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nMoves a card to another phase or a new position within the current phase.\n\nTo move a card, the new phase ID must be provided.\nYou can use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow)\nto get IDs for all the phases in the workflow,\nincluding the win phase.\n\nIf a card is moved to the win phase,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}/move",
        "links": [],
        "examples": [        {
          "title": "Move a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/move' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 2\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveCardRequest",
        "rpcResponseName": "MoveCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Card (Additional Binding 1)",
      "methodName": "MoveCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to move.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to move the card to.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the card in the phase, where the first card is `0`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "MoveCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_MoveCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nMoves a card to another phase or a new position within the current phase.\n\nTo move a card, the new phase ID must be provided.\nYou can use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow)\nto get IDs for all the phases in the workflow,\nincluding the win phase.\n\nIf a card is moved to the win phase,\nits attached contact can be attached to another card in an active phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}/move",
        "links": [],
        "examples": [        {
          "title": "Move a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/move' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 2\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveCardRequest",
        "rpcResponseName": "MoveCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Phase",
      "methodName": "MovePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "newPosition",
        "workflowId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow that contains the phase to move.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to move.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": "\nNew phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "MovePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_MovePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nMoves a phase to a new position in its workflow.\n\nPhases are displayed according to their position from left to right,\nstarting from `0` and incrementing by 1.\nIf you create or move a phase to an existing position,\nthe phase in that position and any subsequent phases\nare shifted to the right by 1.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases/{id}/move",
        "links": [],
        "examples": [        {
          "title": "Move a phase",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases/010d507f-002e-4956-9065-f6077283c031/move' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"newPosition\": 1\n}'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MovePhaseRequest",
        "rpcResponseName": "MovePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Move Phase (Additional Binding 1)",
      "methodName": "MovePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "newPosition",
        "workflowId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow that contains the phase to move.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to move.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": "\nNew phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "MovePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_MovePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nMoves a phase to a new position in its workflow.\n\nPhases are displayed according to their position from left to right,\nstarting from `0` and incrementing by 1.\nIf you create or move a phase to an existing position,\nthe phase in that position and any subsequent phases\nare shifted to the right by 1.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases/{id}/move",
        "links": [],
        "examples": [        {
          "title": "Move a phase",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c/phases/010d507f-002e-4956-9065-f6077283c031/move' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"newPosition\": 1\n}'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MovePhaseRequest",
        "rpcResponseName": "MovePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Restore Card",
      "methodName": "RestoreCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "newPhaseId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to restore.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to restore the card to.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the restored card in the phase,\n where the first card is `0`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "RestoreCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_RestoreCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRestores an archived card to the specified phase.\n\nTo restore a card, the new phase ID must be provided.\nYou can use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow)\nto get IDs for all the phases in the workflow,\nincluding the win phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}/restore",
        "links": [],
        "examples": [        {
          "title": "Restore a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/restore' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RestoreCardRequest",
        "rpcResponseName": "RestoreCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Restore Card (Additional Binding 1)",
      "methodName": "RestoreCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "newPhaseId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to restore.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to restore the card to.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the restored card in the phase,\n where the first card is `0`.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "RestoreCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_RestoreCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nRestores an archived card to the specified phase.\n\nTo restore a card, the new phase ID must be provided.\nYou can use\n[Get Workflow](https://dev.wix.com/api/rest/workflows/workflows/workflows/get-workflow)\nto get IDs for all the phases in the workflow,\nincluding the win phase.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}/restore",
        "links": [],
        "examples": [        {
          "title": "Restore a card",
          "body": ["curl -X POST 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/restore' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RestoreCardRequest",
        "rpcResponseName": "RestoreCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Card",
      "methodName": "UpdateCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "cardInfo",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a card's properties.\n\nTo reorder cards, use\n[Move Card](https://dev.wix.com/api/rest/workflows/workflows/cards/move-card).\nTo archive or restore a card, use\n[Archive Card](https://dev.wix.com/api/rest/workflows/workflows/cards/archive-card)\nor [Restore Card](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card),\nrespectively.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "Update a card",
          "body": ["curl -X PATCH 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"cardInfo\": {\n\t\t\"name\": \"New name\"\n\t}\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCardRequest",
        "rpcResponseName": "UpdateCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Card (Additional Binding 1)",
      "methodName": "UpdateCard",
      "serviceName": "CardsService",
      "tag": "Cards",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the card to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "cardInfo",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCard",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateCardResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a card's properties.\n\nTo reorder cards, use\n[Move Card](https://dev.wix.com/api/rest/workflows/workflows/cards/move-card).\nTo archive or restore a card, use\n[Archive Card](https://dev.wix.com/api/rest/workflows/workflows/cards/archive-card)\nor [Restore Card](https://dev.wix.com/api/rest/workflows/workflows/cards/restore-card),\nrespectively.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/api/v1/cards/{id}",
        "links": [],
        "examples": [        {
          "title": "Update a card",
          "body": ["curl -X PATCH 'https://www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"cardInfo\": {\n\t\t\"name\": \"New name\"\n\t}\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCardRequest",
        "rpcResponseName": "UpdateCardResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Phase",
      "methodName": "UpdatePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details to update.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdatePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdatePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a phase's name.\n\nTo reorder phases, use\n[Move Phase](https://dev.wix.com/api/rest/workflows/workflows/phases/move-phase).\nTo reorder or rename cards, use the\n[Cards API](https://dev.wix.com/api/rest/workflows/workflows/cards).\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Rename a phase",
          "body": ["curl -X PATCH 'www.wixapis.com/workflows/api/v1/phases/010d507f-002e-4956-9065-f6077283c031' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase name\"\n\t}\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdatePhaseRequest",
        "rpcResponseName": "UpdatePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Phase (Additional Binding 1)",
      "methodName": "UpdatePhase",
      "serviceName": "PhasesService",
      "tag": "Phases",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details to update.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdatePhase",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdatePhaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a phase's name.\n\nTo reorder phases, use\n[Move Phase](https://dev.wix.com/api/rest/workflows/workflows/phases/move-phase).\nTo reorder or rename cards, use the\n[Cards API](https://dev.wix.com/api/rest/workflows/workflows/cards).\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/api/v1/phases/{id}",
        "links": [],
        "examples": [        {
          "title": "Rename a phase",
          "body": ["curl -X PATCH 'www.wixapis.com/workflows/api/v1/phases/010d507f-002e-4956-9065-f6077283c031' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase name\"\n\t}\n}'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdatePhaseRequest",
        "rpcResponseName": "UpdatePhaseResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Workflow",
      "methodName": "UpdateWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "workflow",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
          "doc": " Workflow info.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a workflow's name or description.\n\nTo rename or reorder phases or cards, use the\n[Phases API](https://dev.wix.com/api/rest/workflows/workflows/phases)\nor the\n[Cards API](https://dev.wix.com/api/rest/workflows/workflows/cards),\nrespectively.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Update a workflow",
          "body": ["curl -X PATCH 'https://www.wixapis.com/workflows/api/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"workflow\": {\n    \"name\": \"New workflow name\",\n    \"description\": \"Better description than we had before\"\n  }\n}'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateWorkflowRequest",
        "rpcResponseName": "UpdateWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Workflow (Additional Binding 1)",
      "methodName": "UpdateWorkflow",
      "serviceName": "WorkflowsService",
      "tag": "Workflows",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "workflow",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
          "doc": " Workflow info.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateWorkflow",
          "statusCode": "200",
          "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateWorkflowResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a workflow's name or description.\n\nTo rename or reorder phases or cards, use the\n[Phases API](https://dev.wix.com/api/rest/workflows/workflows/phases)\nor the\n[Cards API](https://dev.wix.com/api/rest/workflows/workflows/cards),\nrespectively.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/workflows/api/v1/workflows/{id}",
        "links": [],
        "examples": [        {
          "title": "Update a workflow",
          "body": ["curl -X PATCH 'https://www.wixapis.com/workflows/api/v1/workflows/68c3cc89-f5eb-45d2-bb03-1780f1e7a06c' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"workflow\": {\n    \"name\": \"New workflow name\",\n    \"description\": \"Better description than we had before\"\n  }\n}'\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateWorkflowRequest",
        "rpcResponseName": "UpdateWorkflowResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_workflow_api_v1_CardDeletedDomainEvent",
      "name": "Card Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a card is deleted.\n",
        "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/src/main/proto/com/wixpress/workflow/api/v1/cardsService.proto"
      },
      "topic": "domain_events_wix.workflows.v1.card",
      "tag": "Cards",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.workflows.v1.card_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_workflow_api_v1_CardUpdatedDomainEvent",
      "name": "Card Updated Webhook",
      "docs":       {
        "summary": " Triggered when a card is updated.\n",
        "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/src/main/proto/com/wixpress/workflow/api/v1/cardsService.proto"
      },
      "topic": "domain_events_wix.workflows.v1.card",
      "tag": "Cards",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.workflows.v1.card_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_workflow_api_v1_CardCreatedDomainEvent",
      "name": "Card Created Webhook",
      "docs":       {
        "summary": " Triggered when a card is created.\n",
        "src": "https://github.com/wix-private/crm/tree/master/workflow-server/workflow-server-api/src/main/proto/com/wixpress/workflow/api/v1/cardsService.proto"
      },
      "topic": "domain_events_wix.workflows.v1.card",
      "tag": "Cards",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.workflows.v1.card_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_workflow_api_v1_CardDeletedDomainEvent",
      "displayName": "Card Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Card ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardEntityDeletedEvent",
      "displayName": "Card Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardUpdatedDomainEvent",
      "displayName": "Card Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Card ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardEntityUpdatedEvent",
      "displayName": "Card Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "currentEntity",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Card",
          "doc": "Event body"
        },
                {
          "name": "previousEntity",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Card",
          "doc": "Previous event body, (when relevant)."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardCreatedDomainEvent",
      "displayName": "Card Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Card ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardEntityCreatedEvent",
      "displayName": "Card Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Card",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_Attachment",
      "displayName": "Attachment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attachmentId",
          "type": "string",
          "doc": " Attachment ID. For internal use.\n",
          "readOnly": true
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Deprecated. Use `contactId` instead.\n",
          "deprecated": true
        },
                {
          "name": "attachmentType",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_AttachmentType",
          "doc": " Deprecated. For internal use.\n",
          "deprecated": true
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " ID of the contact attached to the card.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardInfo",
      "displayName": "Card Info Object",
      "locations": [],
      "docs":       {
        "summary": " entity representing a card-info\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Card ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Display name shown at the top of the card.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Card description.\n"
        },
                {
          "name": "primaryAttachment",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Attachment",
          "doc": " Details about the contact attached to the card.\n"
        },
                {
          "name": "dueDate",
          "type": "string",
          "doc": " Due date.\n"
        },
                {
          "name": "source",
          "type": "string",
          "doc": " Name of the app or service that created the contact.\n"
        },
                {
          "name": "createdAt",
          "type": "string",
          "doc": " Deprecated. Use `createdDate` instead.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "updatedAt",
          "type": "string",
          "doc": " Deprecated. Use `updatedDate` instead.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "phaseId",
          "type": "string",
          "doc": " ID of the phase that currently holds the card.\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the card was created.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date and time the card was updated.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_Card",
      "displayName": "Card Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"card\" : {\n    \"info\" : {\n      \"id\" : \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\" : \"\",\n      \"primaryAttachment\" : {\n        \"attachmentId\" : \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\" : \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\" : \"Contacts\",\n      \"createdAt\" : \"2020-06-03T17:57:32Z\",\n      \"updatedAt\" : \"2020-06-03T17:57:32Z\",\n      \"phaseId\" : \"d6b621bd-2681-417f-b394-8b78586cc082\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members": [      {
        "name": "info",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
        "doc": " Card details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_PaginationResponse",
      "displayName": "Pagination Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items that were skipped in the current sort order.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that matched the filter.\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of returned items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Workflows._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Workflows._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Workflows._wix_common_SortOrder",
          "doc": " Sort order.\n\n Defaults to `ASC`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Query",
      "displayName": "Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "All APIs.Workflows._google_protobuf_Value",
          "doc": "Filter object in the following format:   \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Workflows._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListCardsRequest",
      "displayName": "List Cards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose cards will be listed.\n"
        },
                {
          "name": "phaseId",
          "type": "string",
          "doc": " Filters for cards in the specified phase.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n\n Defaults to `50`.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n"
        },
                {
          "name": "attachmentValue",
          "type": "string",
          "doc": " Filters for cards with the specified contact ID.\n"
        },
                {
          "name": "fetchArchived",
          "type": "boolean",
          "doc": "\nFilters for archived cards.\nIf set to `true`,\nonly archived cards are returned.\nIf set to `false`,\nonly cards that are not archived are returned.\n\nDefaults to `false`.\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `createdDate`, `updatedDate`, `phaseId`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListCardsResponse",
      "displayName": "List Cards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]
          },
          "doc": " List of cards.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetCardRequest",
      "displayName": "Get Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the card to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetCardResponse",
      "displayName": "Get Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "card",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Card",
        "doc": " Requested card.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreateCardRequest",
      "displayName": "Create Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the card in.\n"
        },
                {
          "name": "phaseId",
          "type": "string",
          "doc": " ID of the phase to create the card in.\n"
        },
                {
          "name": "card",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n"
        },
                {
          "name": "position",
          "type": "integer",
          "doc": "\nCard position, where the first card is `0`.\n\nIf a card already occupies the specified position,\nthat card and any subsequent cards are shifted to the right by 1.\n\nDefaults to the last position.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreateCardResponse",
      "displayName": "Create Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the newly created card.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdateCardRequest",
      "displayName": "Update Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the card to update.\n"
        },
                {
          "name": "cardInfo",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo",
          "doc": " Card details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdateCardResponse",
      "displayName": "Update Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeleteCardRequest",
      "displayName": "Delete Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the card to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeleteCardResponse",
      "displayName": "Delete Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_MoveCardRequest",
      "displayName": "Move Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the card to move.\n"
        },
                {
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to move the card to.\n"
        },
                {
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the card in the phase, where the first card is `0`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_MoveCardResponse",
      "displayName": "Move Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_RestoreCardRequest",
      "displayName": "Restore Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the card to restore.\n"
        },
                {
          "name": "newPhaseId",
          "type": "string",
          "doc": " ID of the phase to restore the card to.\n"
        },
                {
          "name": "newPosition",
          "type": "integer",
          "doc": " Position of the restored card in the phase,\n where the first card is `0`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_RestoreCardResponse",
      "displayName": "Restore Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ArchiveCardRequest",
      "displayName": "Archive Card Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the card to archive.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ArchiveCardResponse",
      "displayName": "Archive Card Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryCardsRequest",
      "displayName": "Query Cards Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Workflows._wix_common_Query",
        "doc": " Query, sort, and paging options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryCardsResponse",
      "displayName": "Query Cards Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]
          },
          "doc": " List of cards that matched the query criteria.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_PhaseInfo",
      "displayName": "Phase Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Phase ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Display name shown at the top of the phase.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_Phase",
      "displayName": "Phase Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"phase\" : {\n    \"info\" : {\n      \"id\" : \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n      \"name\" : \"In Progress\"\n    },\n    \"cardsList\" : {\n      \"total\" : 1,\n      \"cards\" : [ {\n        \"info\" : {\n          \"id\" : \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n          \"name\" : \"new name\",\n          \"primaryAttachment\" : {\n            \"attachmentId\" : \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n            \"contactId\" : \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n          },\n          \"source\" : \"Contacts\",\n          \"createdAt\" : \"2020-06-03T17:57:32Z\",\n          \"updatedAt\" : \"2020-06-05T18:06:24Z\",\n          \"phaseId\" : \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n        }\n      } ]\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "info",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase information.\n"
        },
                {
          "name": "cardsList",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_CardsList",
          "doc": " Cards contained in the phase.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CardsList",
      "displayName": "Cards List Object",
      "locations": [],
      "docs":       {
        "summary": " a list of cards (a page) along with the total number\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of cards in the phase.\n"
        },
                {
          "name": "cards",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]
          },
          "doc": " List of cards in the phase.\n Sorted according to the card display order, from top to bottom.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_WorkflowInfo",
      "displayName": "Workflow Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Workflow ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Display name for the workflow.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Workflow description,\n shown below the workflow's display name in the dashboard.\n"
        },
                {
          "name": "createdAt",
          "type": "string",
          "doc": " Deprecated. Use `createdDate` instead.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "isDeletable",
          "type": "boolean",
          "doc": " Indicates whether the workflow can be deleted.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date and time the workflow was created.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_Workflow",
      "displayName": "Workflow Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"workflow\" : {\n    \"info\" : {\n      \"id\" : \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n      \"name\" : \"Custom Flow\",\n      \"description\" : \"\",\n      \"createdAt\" : \"2020-04-19T08:12:31.619Z\"\n    },\n    \"winPhase\" : {\n      \"info\" : {\n        \"id\" : \"170ff442-21c0-4907-a7cc-9d6999609532\",\n        \"name\" : \"Done\"\n      },\n      \"cardsList\" : {\n        \"total\" : 0,\n        \"cards\" : [ ]\n      }\n    },\n    \"phasesList\" : {\n      \"total\" : 2,\n      \"phases\" : [ {\n        \"info\" : {\n          \"id\" : \"d6b621bd-2681-417f-b394-8b78586cc082\",\n          \"name\" : \"To Do\"\n        },\n        \"cardsList\" : {\n          \"total\" : 0,\n          \"cards\" : [ ]\n        }\n      }, {\n        \"info\" : {\n          \"id\" : \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n          \"name\" : \"In Progress\"\n        },\n        \"cardsList\" : {\n          \"total\" : 1,\n          \"cards\" : [ {\n            \"info\" : {\n              \"id\" : \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n              \"name\" : \"new name\",\n              \"primaryAttachment\" : {\n                \"attachmentId\" : \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n                \"contactId\" : \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n              },\n              \"source\" : \"Contacts\",\n              \"createdAt\" : \"2020-06-03T17:57:32Z\",\n              \"updatedAt\" : \"2020-06-05T18:06:24Z\",\n              \"phaseId\" : \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n            }\n          } ]\n        }\n      } ]\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "info",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
          "doc": " Workflow information and metadata.\n"
        },
                {
          "name": "winPhase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Phase",
          "doc": " Final phase of the workflow.\n Cards in `winPhase` are treated as if they are not part of the workflow.\n\n Normally, a contact can be attached to only 1 card in the workflow.\n Moving a contact's card to `winPhase`\n frees up the contact to be attached to another card in the workflow.\n"
        },
                {
          "name": "phasesList",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhasesList",
          "doc": " Phases that make up the workflow.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_PhasesList",
      "displayName": "Phases List Object",
      "locations": [],
      "docs":       {
        "summary": " a list of phases (a page) along with the total number\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of phases in the workflow, excluding `winPhase`.\n"
        },
                {
          "name": "phases",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]
          },
          "doc": " List of phases in the workflow.\n Sorted according to the phase display order, from left to right.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListPhasesRequest",
      "displayName": "List Phases Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow whose phases will be listed.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListPhasesResponse",
      "displayName": "List Phases Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "phases",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]
          },
          "doc": " List of phases.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetPhaseRequest",
      "displayName": "Get Phase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetPhaseResponse",
      "displayName": "Get Phase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "phase",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Phase",
        "doc": " Requested phase.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreatePhaseRequest",
      "displayName": "Create Phase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow to create the phase in.\n"
        },
                {
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details.\n"
        },
                {
          "name": "position",
          "type": "integer",
          "doc": "\nPhase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n\nDefaults to the last position,\nwhich is displayed before the win phase.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreatePhaseResponse",
      "displayName": "Create Phase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the newly created phase.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdatePhaseRequest",
      "displayName": "Update Phase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to update.\n"
        },
                {
          "name": "phase",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo",
          "doc": " Phase details to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdatePhaseResponse",
      "displayName": "Update Phase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeletePhaseRequest",
      "displayName": "Delete Phase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the phase to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeletePhaseResponse",
      "displayName": "Delete Phase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_MovePhaseRequest",
      "displayName": "Move Phase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflowId",
          "type": "string",
          "doc": " ID of the workflow that contains the phase to move.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the phase to move.\n"
        },
                {
          "name": "newPosition",
          "type": "integer",
          "doc": "\nNew phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_MovePhaseResponse",
      "displayName": "Move Phase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryPhasesRequest",
      "displayName": "Query Phases Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Workflows._wix_common_Query",
        "doc": " Query, sort, and paging options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryPhasesResponse",
      "displayName": "Query Phases Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "phases",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]
          },
          "doc": " List of phases that matched the query criteria.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListTemplatesRequest",
      "displayName": "List Templates Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to return.\n If omitted, all results are returned.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of projected fields to return.\n If omitted, all fields are returned.\n\n For a list of valid projected fields, see\n [Valid Workflow Projected Fields](#)\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListTemplatesResponse",
      "displayName": "List Templates Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflows",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo"]
          },
          "doc": " List of templates.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetTemplateRequest",
      "displayName": "Get Template Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Template ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetTemplateResponse",
      "displayName": "Get Template Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "workflow",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow",
        "doc": " The requested template.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CloneTemplateRequest",
      "displayName": "Clone Template Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " a unique identifier of the template to clone\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CloneTemplateResponse",
      "displayName": "Clone Template Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " the id of the newly created workflow\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListWorkflowsRequest",
      "displayName": "List Workflows Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of workflows to return.\n If omitted, all results are returned.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n\n Defaults to `0`.\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nSupported fields:\n`id`, `name`, `description`, `createdDate`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_ListWorkflowsResponse",
      "displayName": "List Workflows Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflows",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo"]
          },
          "doc": " Retrieved list of workflows.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the page of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetWorkflowRequest",
      "displayName": "Get Workflow Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to retrieve.\n"
        },
                {
          "name": "cardsPerPhase",
          "type": "integer",
          "doc": "\nMaximum number of cards to return per phase.\nTo retrieve additional pages of cards, use\n[List Cards](https://dev.wix.com/api/rest/workflows/workflows/cards/list-cards)\n(in the Cards API).\n\nDefaults to `10`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_GetWorkflowResponse",
      "displayName": "Get Workflow Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "workflow",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow",
        "doc": " Requested workflow.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreateWorkflowRequest",
      "displayName": "Create Workflow Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "workflow",
        "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
        "doc": " Workflow details.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_CreateWorkflowResponse",
      "displayName": "Create Workflow Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the new workflow.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdateWorkflowRequest",
      "displayName": "Update Workflow Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the workflow to update.\n"
        },
                {
          "name": "workflow",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo",
          "doc": " Workflow info.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_UpdateWorkflowResponse",
      "displayName": "Update Workflow Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeleteWorkflowRequest",
      "displayName": "Delete Workflow Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the workflow to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_DeleteWorkflowResponse",
      "displayName": "Delete Workflow Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_SetupWorkflowRequest",
      "displayName": "Setup Workflow Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_SetupWorkflowResponse",
      "displayName": "Setup Workflow Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryWorkflowsRequest",
      "displayName": "Query Workflows Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Workflows._wix_common_Query",
        "doc": " Query options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_QueryWorkflowsResponse",
      "displayName": "Query Workflows Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "workflows",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow"]
          },
          "doc": " List of workflows that matched the query.\n"
        },
                {
          "name": "pagination",
          "type": "All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse",
          "doc": " Metadata for the paginated results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_workflow_api_v1_AttachmentType",
      "displayName": "Attachment Type Object",
      "locations": [],
      "docs":       {
        "summary": " describes the supported types of attachments (currently only supports Contact which is the default type)\n \n Possible values are: <li><code> ContactType <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["ContactType"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.workflow.workflow-server-web"}
}